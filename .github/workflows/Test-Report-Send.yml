name: Sending Test Report
on:
  workflow_dispatch: 

jobs:
  devdomain:
    runs-on: ubuntu-latest

    steps:
      - name: Pulling code from required branch
        uses: actions/checkout@v4
        with:
          ref: selenium-framework
      
      - name: Set up Chrome browser
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip xvfb libxi6 libgconf-2-4
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          CHROME_DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget -N http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          google-chrome-stable --version
          chromedriver --version

      - name: Run tests for devdomain
        run: |
          mvn clean install -DskipTests
          cd devdomain
          mvn --batch-mode --update-snapshots verify

      - name: Generate and Upload Artifacts for devdomain
        run: |
            mkdir -p artifacts/devdomain
            cp target/*.jar artifacts/devdomain
      - name: Upload Artifacts for devdomain
        uses: actions/upload-artifact@v2
        with:
          name: devdomain-reports
          path: artifacts/devdomain/

  # testdomain:
  #   runs-on: windows-latest  # Use windows-latest for Windows environment

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Clear Chocolatey cache
  #       run: choco cache clean --all

  #     - name: Install Google Chrome
  #       run: choco install googlechrome --ignore-checksums

  #     - name: Run tests for testdomain
  #       run: |
  #         mvn clean install -DskipTests
  #         cd testdomain
  #         mvn -fae test

  #     - name: Generate and Upload Artifacts for testdomain
  #       run: |
  #           mkdir -p artifacts/testdomain
            
  #           # Copy HTML reports from testdomain/Report (adjust path as necessary)
  #           if (Test-Path "testdomain/Report") {
  #             Copy-Item -Path "testdomain/Report/*.html" -Destination "artifacts/testdomain/"
  #           }

  #     - name: Upload Artifacts for testdomain
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: testdomain-reports
  #         path: artifacts/testdomain/
